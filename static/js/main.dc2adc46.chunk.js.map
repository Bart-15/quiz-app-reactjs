{"version":3,"sources":["components/Start.js","questions.js","components/Questions.js","App.js","reportWebVitals.js","index.js"],"names":["Start","start","setStart","className","onClick","questions","questionText","answerOptions","choices","isCorrect","Questions","useState","showScore","setShowScore","currentQuestion","setCurrentQuestion","score","setScore","length","map","answerOption","index","correct","nextQuestion","submitAnswer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAUeA,EARD,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACnB,OACE,qBAAKC,UAAU,UAAf,SACC,wBAAQC,QAAS,kBAAMF,GAAUD,IAAQE,UAAU,eAAnD,4BCLDE,EAAY,CAChB,CACEC,aAAc,0DACdC,cAAe,CACb,CAAEC,QAAS,iBAAkBC,WAAW,GACxC,CAAED,QAAS,iBAAkBC,WAAW,GACxC,CAAED,QAAS,iBAAkBC,WAAW,GACxC,CAAED,QAAS,kBAAmBC,WAAW,KAG7C,CACEH,aACE,2EACFC,cAAe,CACb,CAAEC,QAAS,sBAAuBC,WAAW,GAC7C,CAAED,QAAS,qBAAsBC,WAAW,GAC5C,CAAED,QAAS,qBAAsBC,WAAW,GAC5C,CAAED,QAAS,MAAOC,WAAW,KAGjC,CACEH,aAAc,oDACdC,cAAe,CACb,CAAEC,QAAS,cAAeC,WAAW,GACrC,CAAED,QAAS,SAAUC,WAAW,GAChC,CAAED,QAAS,UAAWC,WAAW,GACjC,CAAED,QAAS,UAAWC,WAAW,KAGrC,CACEH,aAAc,sCACdC,cAAe,CACX,CAACC,QAAS,eAAgBC,WAAW,GACrC,CAACD,QAAS,eAAgBC,WAAW,GACrC,CAACD,QAAS,iBAAkBC,WAAW,GACvC,CAACD,QAAS,6BAGhB,CACEF,aAAc,kCACdC,cAAe,CACb,CAAEC,QAAS,aAAcC,WAAW,GACpC,CAAED,QAAS,qBAAsBC,WAAW,GAC5C,CAAED,QAAS,kBAAmBC,WAAW,GACzC,CAAED,QAAS,mBAAoBC,WAAW,MC6CjCC,EArFG,WAAO,IAAD,EACIC,oBAAS,GADb,mBACfV,EADe,KACRC,EADQ,OAEYS,oBAAS,GAFrB,mBAEfC,EAFe,KAEJC,EAFI,OAGwBF,mBAAS,GAHjC,mBAGfG,EAHe,KAGEC,EAHF,OAIIJ,mBAAS,GAJb,mBAIfK,EAJe,KAIRC,EAJQ,KA6BtB,OAAKhB,EAKH,qBAAKE,UAAU,kBAAf,SACE,qBAAKA,UAAU,mCAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,eAAf,SACGS,EACC,sBAAKT,UAAU,aAAf,UACE,+CACiBa,EACf,qCAAQX,EAAUa,aAEpB,wBAAQf,UAAU,YAAYC,QAvB9B,WACZS,GAAa,GACbE,EAAmB,GACnBE,EAAS,GACTf,GAAUD,IAmBE,0BAKF,sBAAKE,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,2CACYW,EAAkB,EAC5B,qCAAQT,EAAUa,aAGpB,mBAAGf,UAAU,qBAAb,SACGE,EAAUS,GAAiBR,eAE9B,oBAAIH,UAAU,YAEhB,qBAAKA,UAAU,UAAf,SACGE,EAAUS,GAAiBP,cAAcY,KACxC,SAACC,EAAcC,GACb,OACE,wBACElB,UAAU,kBAEVC,QAAS,kBA7DZ,SAACkB,GAChBA,GACFL,EAASD,EAAQ,GAGnB,IAAMO,EAAeT,EAAkB,EACnCS,EAAelB,EAAUa,OAC3BH,EAAmBQ,GAEnBV,GAAa,GAoDsBW,CAAaJ,EAAaX,YAH3C,SAKGW,EAAaZ,SAHTa,mBArCpB,cAAC,EAAD,CAAOpB,MAAOA,EAAOC,SAAUA,KCtB3BuB,MARf,WACE,OACE,qBAAKtB,UAAU,WAAf,SACI,cAAC,EAAD,OCKOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.dc2adc46.chunk.js","sourcesContent":["import React from 'react'\n\nconst Start = ({start, setStart}) => {\n    return (\n      <div className='wrapper'>\n       <button onClick={() => setStart(!start)} className=\"start-button\">Start Now!!</button>\n      </div>\n    )\n}\n\nexport default Start\n","const questions = [\n  {\n    questionText: 'When did Ferdinand Magellan rediscover the Philippines?',\n    answerOptions: [\n      { choices: 'March 15, 1588', isCorrect: false },\n      { choices: 'March 16, 1521', isCorrect: true },\n      { choices: 'March 15, 1530', isCorrect: false },\n      { choices: 'August 13, 1530', isCorrect: false },\n    ],\n  },\n  {\n    questionText:\n      'What is the only position held by a Filipino in the Colonial Government?',\n    answerOptions: [\n      { choices: 'Balangay De Espasol', isCorrect: false },\n      { choices: 'Barangay Katipunan', isCorrect: false },\n      { choices: 'Cabeza de Barangay', isCorrect: true },\n      { choices: 'KKK', isCorrect: false },\n    ],\n  },\n  {\n    questionText: 'What is known to be the greatest legacy of Spain?',\n    answerOptions: [\n      { choices: 'Chritianity', isCorrect: true },\n      { choices: 'Fiesta', isCorrect: false },\n      { choices: 'Culture', isCorrect: false },\n      { choices: 'Beliefs', isCorrect: false },\n    ],\n  },\n  {\n    questionText: 'Who was the first female president?',\n    answerOptions: [\n        {choices: 'Leni Robredo', isCorrect: false},\n        {choices: 'Leila Delima', isCorrect: false},\n        {choices: 'Corazon Aquino', isCorrect: true},\n        {choices: 'Gloria Macapagal Arroyo'}\n    ]\n  },\n  {\n    questionText: 'Who proclaimed the Martial Law?',\n    answerOptions: [\n      { choices: 'Jose Rizal', isCorrect: false },\n      { choices: 'Diosdado Macapagal', isCorrect: false },\n      { choices: 'Ramon Magsaysay', isCorrect: false },\n      { choices: 'Ferdinand Marcos', isCorrect: true },\n    ],\n  },\n]\n\nexport {questions};","import React, { useState } from 'react'\nimport Start from './Start'\nimport { questions } from '../questions'\n\nconst Questions = () => {\n  const [start, setStart] = useState(false)\n  const [showScore, setShowScore] = useState(false)\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [score, setScore] = useState(0)\n\n  //Submit answer function\n  const submitAnswer = (correct) => {\n    if (correct) {\n      setScore(score + 1)\n    }\n\n    const nextQuestion = currentQuestion + 1\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion)\n    } else {\n      setShowScore(true)\n    }\n  }\n\n  //reset all\n  const reset = () => {\n    setShowScore(false)\n    setCurrentQuestion(0)\n    setScore(0)\n    setStart(!start)\n  }\n\n  //Start Button\n  if (!start) {\n    return <Start start={start} setStart={setStart} />\n  }\n\n  return (\n    <div className='container h-100'>\n      <div className='row justify-content-center h-100'>\n        <div className='col-sm-8 mx-auto '>\n          <div className='card my-card'>\n            {showScore ? (\n              <div className='show-score'>\n                <p>\n                  Your score is {score}\n                  <span>/{questions.length}</span>\n                </p>\n                <button className='try-again' onClick={reset}>\n                  Try again\n                </button>\n              </div>\n            ) : (\n              <div className='question-flex'>\n                <div className='question-count'>\n                  <h2>\n                    Question {currentQuestion + 1}\n                    <span>/{questions.length}</span>\n                  </h2>\n\n                  <p className='text-question ml-3'>\n                    {questions[currentQuestion].questionText}\n                  </p>\n                  <hr className='line' />\n                </div>\n                <div className='answers'>\n                  {questions[currentQuestion].answerOptions.map(\n                    (answerOption, index) => {\n                      return (\n                        <button\n                          className='answer-btn ml-3'\n                          key={index}\n                          onClick={() => submitAnswer(answerOption.isCorrect)}\n                        >\n                          {answerOption.choices}\n                        </button>\n                      )\n                    }\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Questions\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Questions from './components/Questions'\n\nfunction App() {\n  return (\n    <div className=\"quiz-app\">\n        <Questions />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}